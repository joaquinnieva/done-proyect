{"version":3,"sources":["components/AddTask.js","images/calendar.svg","images/favs.svg","components/Images.js","images/logo.svg","images/options.svg","components/Tasks.js","components/Main.js","components/Navbar.js","redux/store.js","App.js","index.js"],"names":["connect","state","tasks","dispatch","addTask","task","type","useState","click","setClick","idTask","setIdTask","name","desc","todo","setTask","addingTask","length","toast","id","handleChange","e","target","value","className","position","autoClose","hideProgressBar","newestOnTop","rtl","pauseOnFocusLoss","draggable","pauseOnHover","placeholder","onChange","autoComplete","onSubmit","preventDefault","onClick","Images","logo","options","calendar","fav","tasksdone","taskDone","taskRemove","map","src","alt","Main","Navbar","initialState","createStore","action","concat","filter","App","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.796bc9e4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../styles/AddTask.css';\r\n\r\nconst AddTask = ({ addTask, tasks }) => {\r\n  const [click, setClick] = useState(true);\r\n  const handleClick = () => setClick(!click);\r\n  const [idTask, setIdTask] = useState(1);\r\n\r\n  const [task, setTask] = useState({\r\n    name: '',\r\n    desc: '',\r\n    todo: '',\r\n  });\r\n  const { name, desc, todo } = task;\r\n  const notify = () => toast('Task no name');\r\n  const addingTask = (task) => {\r\n    setIdTask(idTask + 1);\r\n    if (task.name.length === 0) {\r\n      notify('sin name');\r\n    } else {\r\n      addTask({\r\n        id: idTask,\r\n        ...task,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setTask({\r\n      ...task,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"icon-addtask\">\r\n      <div className=\"toastify\">\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar\r\n          newestOnTop={false}\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n      <div className={click ? 'form' : 'form-open'}>\r\n        <div className=\"form-cont\">\r\n          <input\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n            className=\"input\"\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n          ></input>\r\n          <input\r\n            name=\"desc\"\r\n            value={desc}\r\n            type=\"text\"\r\n            placeholder=\"description\"\r\n            className=\"input\"\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n          ></input>\r\n          <input\r\n            name=\"todo\"\r\n            value={todo}\r\n            type=\"date\"\r\n            placeholder=\"day to do it\"\r\n            className=\"input\"\r\n            onChange={handleChange}\r\n          ></input>\r\n          <input\r\n            name=\"submit\"\r\n            type=\"submit\"\r\n            value=\"Add task\"\r\n            className=\"input-send\"\r\n            onSubmit={handleSubmit}\r\n            onClick={() => addingTask(task)}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className={click ? 'ico-cont-at' : 'ico-cont-at-open'} onClick={handleClick}>\r\n        <div className=\"addtask-lineA\"></div>\r\n        <div className=\"addtask-lineB\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  tasks: state.tasks,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addTask(task) {\r\n    dispatch({\r\n      type: 'ADDTASK',\r\n      task,\r\n    });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask);\r\n","export default __webpack_public_path__ + \"static/media/calendar.c69bc65f.svg\";","export default __webpack_public_path__ + \"static/media/favs.e00a416f.svg\";","import calendar from '../images/calendar.svg';\r\nimport fav from '../images/favs.svg';\r\nimport logo from '../images/logo.svg';\r\nimport options from '../images/options.svg';\r\n\r\nlet Images = {\r\n  logo: logo,\r\n  options: options,\r\n  calendar: calendar,\r\n  fav: fav,\r\n};\r\nexport default Images;\r\n","export default __webpack_public_path__ + \"static/media/logo.f1f310ce.svg\";","export default __webpack_public_path__ + \"static/media/options.16bc1a2f.svg\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/Tasks.css';\r\nimport Images from './Images';\r\n\r\nconst Tasks = ({ tasks, taskDone, tasksdone, taskRemove }) => {\r\n  return (\r\n    <>\r\n      {tasks.length === 0 ? (\r\n        <p className=\"notasks\">Add tasks to do</p>\r\n      ) : (\r\n        <div className=\"task-container\">\r\n          {tasks.map((task) => (\r\n            <div className=\"task-card\" key={task.id}>\r\n              <div className=\"card-info-v\">\r\n                <input type=\"radio\" className=\"card-checkbox\" onClick={() => taskDone(task)}></input>\r\n                <div className=\"card-name\">{task.name}</div>\r\n                <div className=\"card-options\">\r\n                  <img src={Images.options} alt=\"options\" onClick={() => taskRemove(task)} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-desc\">description: {task.desc}</div>\r\n              <div className=\"card-todo\">date: {task.todo}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {tasksdone.length === 0 ? null : <div className=\"tasks-done\">Tasks done</div>}\r\n      <div className=\"task-container\">\r\n        {tasksdone.map((task) => (\r\n          <div className=\"task-card\" key={task.id}>\r\n            <div className=\"card-info-v\">\r\n              <div className=\"card-checkbox-fix\"></div>\r\n              <div className=\"card-name\">{task.name}</div>\r\n              <div className=\"card-options\">\r\n                <img src={Images.options} alt=\"options\" onClick={() => taskRemove(task)} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-desc\">{`description: ${task.desc}`}</div>\r\n            <div className=\"card-todo\">{`date: ${task.todo}`}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tasks: state.tasks,\r\n  tasksdone: state.tasksdone,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  taskDone(task) {\r\n    dispatch({\r\n      type: 'TASKDONE',\r\n      task,\r\n    });\r\n  },\r\n  taskRemove(task) {\r\n    dispatch({\r\n      type: 'TASKREMOVE',\r\n      task,\r\n    });\r\n  },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);\r\n","import React from 'react';\r\nimport '../styles/Main.css';\r\nimport Tasks from './Tasks';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <div className=\"main-container\">\r\n        <>\r\n          <Tasks />\r\n        </>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport default Main;\r\n","import React from 'react';\r\nimport '../styles/Navbar.css';\r\nimport Images from './Images';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-container\">\r\n        <div className=\"logo-container\">\r\n          <img src={Images.logo} className=\"logo\" alt=\"logo\" />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import { createStore } from 'redux';\r\n\r\n// constantes\r\nconst initialState = {\r\n  tasks: [],\r\n  tasksdone: [],\r\n};\r\n\r\n// types\r\n\r\n// reducer\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADDTASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.concat(action.task),\r\n      };\r\n\r\n    case 'SETTASKS':\r\n      return {\r\n        ...state,\r\n        tasks: action.task,\r\n      };\r\n\r\n    case 'TASKDONE':\r\n      return {\r\n        ...state,\r\n        tasksdone: state.tasksdone.concat(action.task),\r\n        tasks: state.tasks.filter((task) => task.id !== action.task.id),\r\n      };\r\n\r\n    case 'TASKREMOVE':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((task) => task.id !== action.task.id),\r\n        tasksdone: state.tasksdone.filter((task) => task.id !== action.task.id),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// acciones\r\n\r\n// store\r\nexport default createStore(productReducer);\r\n","import { Provider } from 'react-redux';\nimport AddTask from \"./components/AddTask\";\nimport Main from \"./components/Main\";\nimport Navbar from \"./components/Navbar\";\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <Navbar />\n        <Main />\n        <AddTask />\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}